{"version":3,"sources":["contexts/QueryContext.js","components/SearchBox.js","components/Nav.js","components/Heading.js","contexts/FavouritesContext.js","components/AddFavourites.js","components/RemoveFavourites.js","contexts/WatchListContext.js","components/AddWatchList.js","components/RemoveFromWatchList.js","contexts/WatchedContext.js","components/AddWatched.js","components/RemoveFromWatched.js","components/MovieCard.js","components/MovieList.js","contexts/MoviesContext.js","pages/Home.js","pages/Favourites.js","pages/Watched.js","pages/WatchList.js","App.js","credentials/keys.js","index.js"],"names":["QueryContext","createContext","QueryContextProvider","props","useState","query","setQuery","Provider","value","children","SearchBox","useContext","className","onChange","event","preventDefault","target","placeholder","Nav","id","exact","to","activeClassName","Heading","style","color","heading","FavouritesContext","FavouritesContextProvider","favourites","setFavourites","AddFavourites","movie","postFaveData","faveFilms","configObj","method","headers","body","JSON","stringify","fetch","then","response","json","data","console","log","onClick","find","element","imdbID","newFavesList","class","RemoveFavourites","deleteFromDB","catch","error","newFavouritesList","filter","favourite","WatchListContext","WatchListContextProvider","watchList","setWatchList","AddWatchList","postWatchListData","newWatchList","MoveFromWatchList","item","WatchedContext","WatchedContextProvider","watched","setWatched","AddWatched","postWatchedData","deleteFromWatchList","newWatchedList","RemoveFromWatched","newWatched","MovieCard","movieIsFave","movieIsInWatchList","movieIsInWatched","src","Poster","alt","Title","Year","RemoveFromWatchList","MovieList","movies","moviesToShow","length","map","index","MoviesContext","MoviesContextProvider","setMovies","Home","useEffect","Favourites","Watched","WatchList","App","GetMovies","url","Search","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cf430a3.chunk.js","sourcesContent":["import React, {createContext, useState} from \"react\"\nconst QueryContext = createContext()\n\nconst QueryContextProvider = (props) => {\n    const [query, setQuery] = useState('')\n    \n    return (\n        <QueryContext.Provider value={[query, setQuery]}>\n            {props.children}\n        </QueryContext.Provider>\n    )\n    \n}\n\nexport {QueryContext, QueryContextProvider};\n","import React, {useContext} from 'react';\nimport {QueryContext} from '../contexts/QueryContext'\nimport '../css/SearchBox.css'\n\n\nconst SearchBox = (props) => {\n    const [query, setQuery] = useContext(QueryContext)\n\n    const onChange = event => {\n        event.preventDefault()\n        setQuery(event.target.value)\n    }\n\n        return (\n            <div className=\"search-box\">\n                <input\n                    className=\"search\" \n                    value={query} onChange={onChange}\n                    placeholder=\"Type in a movie to start\"\n                /> \n            </div>\n        )\n    }\n\nexport default SearchBox;","import '../css/Nav.css'\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport SearchBox from './SearchBox'\n\nconst Nav = () => {\n   return (\n      <div className=\"nav-container\">\n         <div className=\"search-box-container\">\n            <SearchBox />\n         </div>\n         <div className=\"nav-link-container\">\n            <nav id=\"nav\">\n               <ul className=\"nav-links\">\n                  <li>\n                     <NavLink exact\n                        className=\"home link-item\"\n                        to='/react-search-app'\n                        activeClassName=\"selected\"\n                     >Home\n                     </NavLink>\n                  </li>\n\n                  <li>\n                     <NavLink exact\n                        className=\"favourites link-item\"\n                        to='/favourites'\n                        activeClassName=\"selected\">\n                        Favourites\n                     </NavLink>\n                  </li>\n\n                  <li>\n                     <NavLink exact\n                        className=\"watchlist link-item\"\n                        to='/watchlist'\n                        activeClassName=\"selected\">\n                        Watch List\n                     </NavLink>\n                  </li>\n\n                  <li>\n                     <NavLink exact\n                        className=\"watched link-item\"\n                        to='/watched'\n                        activeClassName=\"selected\">\n                        Watched\n                     </NavLink>\n                  </li>\n\n               </ul>\n\n            </nav>\n         </div>\n      </div>\n\n   )\n}\n\nexport default Nav;","import '../css/App.css'\nimport React from 'react';\n\n\nconst Heading = (props) => {\n    return (\n        <header style={props.color}>\n            <h1>{props.heading}</h1>\n        </header>\n    )\n}\n\nexport default Heading;","import React, {createContext, useState} from \"react\"\nconst FavouritesContext = createContext()\n\nconst FavouritesContextProvider = (props) => {\n    const [favourites, setFavourites] = useState([])\n    \n    return (\n        <FavouritesContext.Provider \n            value={[favourites, setFavourites]}>\n                {props.children}\n        </FavouritesContext.Provider>\n    )\n    \n}\n\nexport {FavouritesContext, FavouritesContextProvider};\n","import React, {useContext} from 'react';\nimport '../lib/font-awesome/css/all.min.css'\nimport '../css/ButtonComponents.css'\nimport {FavouritesContext} from '../contexts/FavouritesContext'\n\nconst AddFavourites = ({movie}) => {\n\n  const [favourites, setFavourites] = useContext(FavouritesContext)\n  \n  const addToFaves = (event) => {\n      event.preventDefault();  \n      const movieIsFave = favourites.find(element => \n        element.imdbID === movie.imdbID)\n      if (movieIsFave) {\n        return null\n      } \n      else {\n        const newFavesList = [...favourites, movie]\n        movie.id = movie.imdbID //sets the id to the imbD so it can be deleted later\n        console.log('movie in this context is:', movie)\n        setFavourites(newFavesList)\n        postFaveData(movie)\n      }\n    }\n\n    const postFaveData = (faveFilms) => {\n        let configObj = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n          },\n          body: JSON.stringify(faveFilms)\n          \n        };\n        \n        fetch(`http://localhost:8000/favourites`, configObj)\n        .then(response => response.json())\n        .then(data => console.log(data))\n      }\n\n    return (\n        <button className=\"btn favourite tooltip\" onClick={addToFaves} value={movie.id}>\n            <span class=\"tooltiptext\">Add to Favourites</span>\n            <span><i className=\"fa fa-heart\"></i></span>\n        </button>\n    )  \n}\n\nexport default AddFavourites;","import React, { useContext } from 'react'\nimport '../lib/font-awesome/css/all.min.css'\nimport '../css/ButtonComponents.css'\nimport { FavouritesContext } from '../contexts/FavouritesContext'\n\n\nconst RemoveFavourites = ({ movie }) => {\n    const [favourites, setFavourites] = useContext(FavouritesContext)\n\n    const RemoveCard = (event) => {\n        event.preventDefault();\n        const newFavouritesList = favourites.filter(\n            (favourite) => favourite.imdbID !== movie.imdbID\n        );\n        deleteFromDB()\n        setFavourites(newFavouritesList)\n    }\n\n    const deleteFromDB = () => {\n        fetch(`http://localhost:8000/favourites/${movie.id}`, {\n            method: \"DELETE\",\n        })\n        .then(response => response)\n        .catch(error => console.log(error))\n    }\n\n    return (\n        <button className=\"btn remove-favourite tooltip\" onClick={RemoveCard} value={movie.id}>\n            <span className=\"tooltiptext\">Remove from Favourites</span>\n            <span><i className=\"fa fa-heart\"></i></span>\n        </button>\n    )\n}\n\nexport default RemoveFavourites","import React, {createContext, useState} from \"react\"\nconst WatchListContext = createContext()\n\nconst WatchListContextProvider = (props) => {\n    const [watchList, setWatchList] = useState([])\n\n    return (\n        <WatchListContext.Provider \n            value= {[watchList, setWatchList]}>\n                {props.children}\n        </WatchListContext.Provider>\n    )\n    \n}\n\nexport {WatchListContext, WatchListContextProvider};\n","import React, { useContext } from 'react';\nimport '../lib/font-awesome/css/all.min.css'\nimport { WatchListContext } from '../contexts/WatchListContext'\n\nconst AddWatchList = ({ movie }) => {\n\n    const [watchList, setWatchList] = useContext(WatchListContext)\n\n    const addToWatchList = (event) => {\n        event.preventDefault();\n        const movieIsInWatched = watchList.find(element =>\n            element.imdbID === movie.imdbID)\n        if (movieIsInWatched) {\n            return null\n        }\n        else {\n            const newWatchList = [...watchList, movie]\n            movie.id = movie.imdbID //sets the id to the imbD so it can be deleted later\n            setWatchList(newWatchList)\n            postWatchListData(movie)\n        }\n    }\n\n    const postWatchListData = (watchList) => {\n        let configObj = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(watchList),\n        };\n\n        fetch(\"http://localhost:8000/watchlist\", configObj)\n            .then(function (response) {\n                return response.json();\n            })\n            .then(data => {\n                console.log(data)\n            });\n    }\n\n    return (\n        <button className=\"btn add-watchlist tooltip\" onClick={addToWatchList} value={movie.id}>\n            <span className=\"tooltiptext\">Add to Watch List</span>\n            <span><i className=\"fa fa-list\"></i></span>\n        </button>\n    )\n}\n\nexport default AddWatchList;","import React, { useContext } from 'react'\nimport '../lib/font-awesome/css/all.min.css'\nimport '../css/ButtonComponents.css'\nimport { WatchListContext } from '../contexts/WatchListContext'\n\n\nconst MoveFromWatchList = ({ movie }) => {\n    const [watchList, setWatchList] = useContext(WatchListContext)\n\n    const RemoveCard = (event) => {\n        event.preventDefault();\n        const newWatchList = watchList.filter(\n            (item) => item.imdbID !== movie.imdbID\n        );\n        setWatchList(newWatchList)\n        deleteFromDB()\n    }\n\n    const deleteFromDB = () => {\n\n        fetch(`http://localhost:8000/watchlist/${movie.imdbID}`, {\n            method: \"DELETE\",\n        })\n        .then(response => response)\n        .catch(error => console.log(error))\n    }\n\n    return (\n        <button className=\"btn tooltip green-list\" onClick={RemoveCard} value={movie.id}>\n            <span class=\"tooltiptext\">Remove from Watch List</span>\n            <span><i className=\"fa fa-list\"></i></span>\n        </button>\n    )\n}\n\nexport default MoveFromWatchList","import React, {createContext, useState} from \"react\"\nconst WatchedContext = createContext()\n\nconst WatchedContextProvider = (props) => {\n    const [watched, setWatched] = useState([])\n    \n    return (\n        <WatchedContext.Provider \n            value={[watched, setWatched]}>\n                {props.children}\n        </WatchedContext.Provider>\n    )\n    \n}\n\nexport {WatchedContext, WatchedContextProvider};\n","import React, { useContext } from 'react';\nimport '../lib/font-awesome/css/all.min.css'\nimport { WatchedContext } from '../contexts/WatchedContext'\n\nconst AddWatched = ({ movie }) => {\n\n  const [watched, setWatched] = useContext(WatchedContext)\n\n  const AddToWatchedDB = (event) => {\n    event.preventDefault();\n    const movieIsInWatched = watched.find(element =>\n      element.imdbID === movie.imdbID)\n    if (movieIsInWatched) {\n      return null\n    }\n    else {\n      const newWatchedList = [...watched, movie]\n      movie.id = movie.imdbID //sets the id to the imbD so it can be deleted later\n      setWatched(newWatchedList)\n      postWatchedData()\n      //If its watched, it doesn't need to be in the watchlist any more\n      deleteFromWatchList()\n    }\n  }\n\n  const postWatchedData = () => {\n    let configObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(movie)\n\n    };\n\n    fetch(\"https://localhost:3001/watched\", configObj)\n    .then(response => response)\n  }\n\n  const deleteFromWatchList = () => {\n\n    fetch(`https://localhost:8000/watchlist/${movie.id}`, {\n      method: \"DELETE\",\n    })\n      .then(response => response.json())\n  }\n\n  return (\n    <button className=\"btn add-watched tooltip\"\n      onClick={AddToWatchedDB} value={movie.id}>\n      <span class=\"tooltiptext\">Add to Watched</span>\n      <span><i className=\"fa fa-eye\"></i></span>\n    </button>\n  )\n}\n\nexport default AddWatched;","import React, {useContext} from 'react'\nimport '../lib/font-awesome/css/all.min.css'\nimport '../css/ButtonComponents.css'\nimport {WatchedContext} from '../contexts/WatchedContext'\n\n\nconst RemoveFromWatched = ({movie}) => {\n    const [watched, setWatched] = useContext(WatchedContext)\n\n    const RemoveCard = (event) => {\n        event.preventDefault();   \n        const newWatched = watched.filter(\n            (item) => item.imdbID !== movie.imdbID\n          );\n        setWatched(newWatched)\n        deleteFromDB()\n        }\n\n    const deleteFromDB = () => {\n        \n        fetch(`http://localhost:8000/watched/${watched.id}`, {\n            method: \"DELETE\",\n            })\n        .then(response => response)\n        .catch(error => console.log(error))\n        }\n\n    return (\n        <button className=\"btn tooltip green-watched\" onClick={RemoveCard} value={movie.id}>\n            <span class=\"tooltiptext\">Remove from Watched</span>\n            <span><i className=\"fa fa-eye\"></i></span>\n        </button>\n    )\n}\n\nexport default RemoveFromWatched;","import '../css/App.css'\nimport '../css/MovieCard.css'\nimport React, { useContext } from 'react'\nimport AddFavourites from './AddFavourites'\nimport RemoveFavourites from './RemoveFavourites'\n\nimport AddWatchList from './AddWatchList'\nimport RemoveFromWatchList from './RemoveFromWatchList'\n\nimport AddWatched from './AddWatched'\nimport RemoveFromWatched from './RemoveFromWatched'\n\nimport { FavouritesContext } from '../contexts/FavouritesContext'\nimport { WatchedContext } from '../contexts/WatchedContext'\nimport { WatchListContext } from '../contexts/WatchListContext'\n\nconst MovieCard = ({ movie }) => {\n    const [favourites] = useContext(FavouritesContext)\n    const [watched] = useContext(WatchedContext)\n    const [watchList] = useContext(WatchListContext)\n\n    // Check for duplicates, create a ternary operator below\n    const movieIsFave = favourites.find(element => element.imdbID === movie.imdbID)\n    const movieIsInWatchList = watchList.find(element => element.imdbID === movie.imdbID)\n    const movieIsInWatched = watched.find(element => element.imdbID === movie.imdbID)\n\n    return (\n        <div className=\"movie-card\" key={movie.imdbID}>\n            <div className=\"image-container\">\n                <img src={movie.Poster} alt={movie.Title} />\n            </div>\n            <div className=\"card-info-container\">\n                <h2>{movie.Title}</h2>\n                <h3>Released: <strong>{movie.Year}</strong></h3>\n            </div>\n\n            <div className=\"controls\">\n                {movieIsFave ?\n                    <RemoveFavourites movie={movie} /> :\n                    <AddFavourites movie={movie} />\n                }\n\n                {/* Nested ternary operator */}\n                {movieIsInWatchList ?\n                    <RemoveFromWatchList movie={movie} /> :\n                    <AddWatchList movie={movie} />\n                }\n\n                {movieIsInWatched ?\n                    <RemoveFromWatched movie={movie} /> :\n                    <AddWatched movie={movie} />\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default MovieCard;","import MovieCard from './MovieCard'\nimport '../css/MovieList.css'\n\nfunction MovieList({ moviesToShow: movies }) {\n\n\n    if (movies.length > 0) {\n        return (\n            <div className=\"container\">\n                <div className=\"movie-list\">\n                    {movies.map((movie, index) => {\n                        //Check if there is no poster available\n                        return (movie.Poster !== 'N/A') ?\n                            <MovieCard\n                                id={index + 1}\n                                key={movie.imdbID}\n                                movie={movie}\n                            />\n                            :\n                            null;\n                    })\n                    }\n                </div>\n            </div>\n\n        )\n    } else {\n        return (\n            <>\n                <p>No results to show</p>\n            </>\n        )\n    }\n\n}\n\nexport default MovieList;","import React, {createContext, useState} from \"react\"\nconst MoviesContext = createContext()\n\nconst MoviesContextProvider = (props) => {\n    const [movies, setMovies] = useState([])\n    \n    return (\n        <MoviesContext.Provider \n            value={[movies, setMovies]}>\n                {props.children}\n        </MoviesContext.Provider>\n    )\n    \n}\n\nexport {MoviesContext, MoviesContextProvider};\n","import '../css/App.css';\nimport '../css/Nav.css';\nimport '../css/Home.css';\nimport React, {useContext, useEffect} from 'react'\nimport Heading from '../components/Heading';\nimport MovieList from \"../components/MovieList\"\nimport {MoviesContext} from '../contexts/MoviesContext'\nimport {QueryContext} from '../contexts/QueryContext'\n\nconst Home = (props) => {\n  const [movies] = useContext(MoviesContext)\n  const [query, setQuery] = useContext(QueryContext)\n\n    console.log(props)\n\n  useEffect(() => {\n    setQuery(\"Avengers\")\n  }, []); \n\n  return (\n    <div className=\"main-wrapper\">\n        <Heading heading ='Search for movies' />\n          <div className=\"movie-list-wrapper\">\n            <MovieList moviesToShow={movies}/>\n        </div>\n    </div>\n\n    )\n}\n\nexport default Home;","import '../css/App.css';\nimport React, {useContext, useEffect} from 'react'\nimport Heading from '../components/Heading'\nimport MovieList from '../components/MovieList'\nimport {FavouritesContext} from '../contexts/FavouritesContext'\n\n\nconst Favourites = () => {\n  const [favourites, setFavourites] = useContext(FavouritesContext)\n\n  const fetchFavourites = () => {\n    fetch('http://localhost:8000/favourites/')\n    .then(response => response.json())\n    .then(data => {\n        setFavourites(data)\n    }) \n    .catch(error => console.log(error))\n}\n\n  useEffect(() => {\n    fetchFavourites()\n    }, [] )\n\n    return (\n      <div className=\"main-wrapper favourites\">\n      <Heading heading ='Favourites'/>\n      <div className=\"movie-list-wrapper\">\n          {  \n            favourites ?\n            <MovieList \n              moviesToShow={favourites}/> \n              :\n            <p>Add movies to your favourites.</p>\n          }\n          \n      </div>\n  </div>\n    )\n}\n\nexport default Favourites;","import '../css/App.css';\nimport React, {useContext, useEffect} from 'react'\nimport Heading from '../components/Heading'\nimport {WatchedContext} from '../contexts/WatchedContext'\nimport MovieList from '../components/MovieList'\n\nconst Watched = () => {\n    \n    const [watched, setWatched] = useContext(WatchedContext)\n\n    const fetchWatched = () => {\n        fetch('http://localhost:8000/watched/')\n        .then(response => response.json())\n        .then(data => {\n            setWatched(data)\n        }) \n        .catch(error => console.log(error))\n    }\n    \n      useEffect(() => {\n          fetchWatched() \n      }, [])\n\n    return (\n        <div className=\"main-wrapper\">\n            <Heading heading ='Watched'/>\n        <div className=\"movie-list-wrapper\">\n            {  \n                watched ?\n                <MovieList \n                    moviesToShow={watched}/> \n                :\n                <p>Add movies you've watched.</p>\n            }\n            \n        </div>\n    </div>\n    )\n}\n\nexport default Watched;","import '../css/App.css';\nimport React, {useContext, useEffect} from 'react'\nimport Heading from '../components/Heading'\nimport MovieList from '../components/MovieList'\nimport {WatchListContext} from '../contexts/WatchListContext'\n\nconst WatchList = () => {\n    const [watchList, setWatchList] = useContext(WatchListContext)\n\n  const fetchWatchList = () => {\n    fetch('http://localhost:8000/watchlist/')\n    .then(response => response.json())\n    .then(data => {\n        setWatchList(data)\n    }) \n    .catch(error => console.log(error))\n}\n\n  useEffect(() => {\n    fetchWatchList()\n    }, [] )\n\n    return (\n      <div className=\"main-wrapper\">\n          <Heading heading ='Watch List'/>\n          <div className=\"movie-list-wrapper\">\n              {\n              watchList ?\n                  <MovieList \n                    moviesToShow={watchList}/> \n                  :\n                  <p>Add movies to your watch list.</p>\n              }    \n          </div>\n      </div>\n    )\n}\n\nexport default WatchList;","\nimport './css/App.css'\n\nimport React, {useEffect, useContext} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Nav from './components/Nav'\n\nimport Home from './pages/Home'\nimport Favourites from './pages/Favourites'\nimport Watched from './pages/Watched'\nimport WatchList from './pages/WatchList'\n\nimport {apiKey} from './credentials/keys'\n\nimport {MoviesContext} from './contexts/MoviesContext'\nimport {QueryContext} from './contexts/QueryContext'\nimport './lib/font-awesome/css/all.min.css'\n\nconst App = () => {\n  const [query, setQuery] = useContext(QueryContext) \n  const [movies, setMovies] = useContext(MoviesContext) \n\n  const GetMovies = () => {\n\n    const url = `https://www.omdbapi.com/?apikey=${apiKey}&s=${query}&plot=short`\n\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          console.log('less data', data)\n              if (data.Search) {\n                setMovies(data.Search)\n              } else {\n                return null\n              }\n            })\n        .catch(error => console.error(error))\n  } \n\n      useEffect(() => {\n        GetMovies();\n      }, [query]); //called when the state updates                           \n\n   return (\n      <div className=\"app-container\">\n          \n          <Router>\n              <div className=\"nav\">   \n                <Nav/>\n              </div>\n              <div className=\"main-content\">\n                  <Route exact path=\"/react-search-app\">\n                    <Home GetMovies = {GetMovies}/>\n                  </Route>\n                  <Route\n                      exact path=\"/favourites\" \n                      component={Favourites}/>\n                  <Route \n                      exact path=\"/watchlist\" \n                      component={WatchList}>\n                  </Route>\n                  <Route \n                    exact path=\"/watched\"\n                    component={Watched}>\n                  </Route>\n              </div>\n          </Router>\n            \n      </div>\n   )\n\n}\n\nexport default App;","export const apiKey = 'c3b78ed6' ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {MoviesContextProvider} from './contexts/MoviesContext'\nimport {QueryContextProvider} from './contexts/QueryContext'\nimport {FavouritesContextProvider} from './contexts/FavouritesContext'\nimport {WatchedContextProvider} from './contexts/WatchedContext'\nimport {WatchListContextProvider} from './contexts/WatchListContext'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryContextProvider>\n      <MoviesContextProvider>\n        <FavouritesContextProvider>\n          <WatchListContextProvider>\n          <WatchedContextProvider>\n            <App />\n          </WatchedContextProvider>\n          </WatchListContextProvider>\n        </FavouritesContextProvider>\n      </MoviesContextProvider>\n    </QueryContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}